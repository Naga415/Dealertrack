'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

exports.default = createProvider;

var _react = require('react');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var storeShape = _react.PropTypes.shape({
  subscribe: _react.PropTypes.func.isRequired,
  dispatch: _react.PropTypes.func.isRequired,
  getState: _react.PropTypes.func.isRequired
}); /*
      Note: this is copied from `react-redux/Provider`.
      The only difference is the wrapping function and the name
      of the context property.
    */


function createProvider() {
  var storeName = arguments.length <= 0 || arguments[0] === undefined ? 'store' : arguments[0];

  var didWarnAboutReceivingStore = false;
  function warnAboutReceivingStore() {
    if (didWarnAboutReceivingStore) {
      return;
    }
    didWarnAboutReceivingStore = true;

    /* eslint-disable no-console */
    if (typeof console !== 'undefined' && typeof console.error === 'function') {
      console.error('<Provider> does not support changing `store` on the fly. ' + 'It is most likely that you see this error because you updated to ' + 'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' + 'automatically. See https://github.com/reactjs/react-redux/releases/' + 'tag/v2.0.0 for the migration instructions.');
    }
    /* eslint-disable no-console */
  }

  var Provider = function (_Component) {
    (0, _inherits3.default)(Provider, _Component);

    function Provider(props, context) {
      (0, _classCallCheck3.default)(this, Provider);

      var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(Provider).call(this, props, context));

      _this.store = props.store;
      return _this;
    }

    (0, _createClass3.default)(Provider, [{
      key: 'getChildContext',
      value: function getChildContext() {
        return (0, _defineProperty3.default)({}, storeName, this.store);
      }
    }, {
      key: 'render',
      value: function render() {
        var children = this.props.children;

        return _react.Children.only(children);
      }
    }]);
    return Provider;
  }(_react.Component);

  if (process.env.NODE_ENV !== 'production') {
    Provider.prototype.componentWillReceiveProps = function (nextProps) {
      var store = this.store;
      var nextStore = nextProps.store;


      if (store !== nextStore) {
        warnAboutReceivingStore();
      }
    };
  }

  Provider.propTypes = {
    store: storeShape.isRequired,
    children: _react.PropTypes.element.isRequired
  };
  Provider.childContextTypes = (0, _defineProperty3.default)({}, storeName, storeShape.isRequired);

  return Provider;
}