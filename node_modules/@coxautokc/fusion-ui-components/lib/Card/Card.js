'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Panel = require('react-bootstrap/lib/Panel');

var _Panel2 = _interopRequireDefault(_Panel);

var _CardDropdownMenu = require('../internal/CardDropdownMenu');

var _CardDropdownMenu2 = _interopRequireDefault(_CardDropdownMenu);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/** Container for data with a border and an optional dropdown */
var Card = function Card(_ref) {
  var htmlId = _ref.htmlId,
      header = _ref.header,
      className = _ref.className,
      actionDropdown = _ref.actionDropdown,
      children = _ref.children,
      other = _objectWithoutProperties(_ref, ['htmlId', 'header', 'className', 'actionDropdown', 'children']);

  var panelHeader = header && _react2.default.createElement(
    'div',
    { className: 'card__title' },
    header
  );
  return _react2.default.createElement(
    _Panel2.default,
    Object.assign({ id: htmlId,
      className: 'card' + (className ? ' ' + className : ''),
      header: panelHeader
    }, other),
    actionDropdown ? _react2.default.createElement(_CardDropdownMenu2.default, {
      htmlId: htmlId + '-CardDropdownMenu',
      actionDropdown: actionDropdown
    }) : null,
    children
  );
};

Card.propTypes = {
  /** Array of links to display in the dropdown.
    Label is a required property for each element in the array.
    All other properties are optional. <br/>
    Optional properties:
    <ul>
    <li> active (bool) - Set to false to display inactive.</li>
    <li>disabled (bool) - Set to true to disable.</li>
    <li>divider (bool) - Set to true to display a divider to the left of the link.</li>
    <li>header (bool) - Set to true to display the card header.</li>
    <li>href (string) - The href </li>
    <li>onClick (func) - Function to call onClick.</li>
    <li>onSelect (func) - Function to call onSelect.</li>
    </ul>
   *  Example: <pre><code>[
    {
      label: "Item-1",
      onSelect: null
    },
    {
      label: "Item-2",
      header: false,
      onClick: null
    },
    {
      label: '',
      divider: true
    },
    {
      label: "Item-3",
      disabled: true,
    }
  ];</code></pre>
  */
  actionDropdown: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    /** Dropdown menuItem label. */
    label: _propTypes2.default.string.isRequired,

    /** Style label as active when true. */
    active: _propTypes2.default.boolean,

    /** Style label as disabled when true */
    disabled: _propTypes2.default.boolean,

    /** Display a divider between labels when true. */
    divider: _propTypes2.default.boolean,

    /** Style label as header when true. */
    header: _propTypes2.default.boolean,

    /** Label Href. */
    href: _propTypes2.default.string,

    /** Callback for onClick of menuItem. */
    onClick: _propTypes2.default.func,

    /** Callback for onSelect of menuItem. */
    onSelect: _propTypes2.default.func
  })),

  /** Child components to compose within the card. */
  children: _propTypes2.default.node,

  /** Additional class to apply to the underlying React Bootstrap Panel. */
  className: _propTypes2.default.string,

  /** Header that displays at the top of the card. */
  header: _propTypes2.default.node,

  /** Globally unique and descriptive HTML ID. Used by QA for automated testing. */
  htmlId: _propTypes2.default.string.isRequired
};

exports.default = Card;