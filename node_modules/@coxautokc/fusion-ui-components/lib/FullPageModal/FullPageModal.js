'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Modal = require('react-bootstrap/lib/Modal');

var _Modal2 = _interopRequireDefault(_Modal);

var _FullPageModalBreadcrumb = require('../internal/FullPageModalBreadcrumb');

var _FullPageModalBreadcrumb2 = _interopRequireDefault(_FullPageModalBreadcrumb);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/** Full page modal dialog with optional integrated breadcrumb. */
var FullPageModal = function FullPageModal(_ref) {
  var htmlId = _ref.htmlId,
      className = _ref.className,
      children = _ref.children,
      header = _ref.header,
      footer = _ref.footer,
      breadcrumb = _ref.breadcrumb,
      closeButton = _ref.closeButton,
      props = _objectWithoutProperties(_ref, ['htmlId', 'className', 'children', 'header', 'footer', 'breadcrumb', 'closeButton']);

  var hasHeader = header && header !== null;
  var hasBreadcrumb = breadcrumb && breadcrumb !== null && breadcrumb.length > 0;
  var mergedClasses = "modal-full" + (hasBreadcrumb ? " modal-full-breadcrumb" : "") + (className ? " " + className : "");

  return _react2.default.createElement(
    'div',
    null,
    _react2.default.createElement(
      _Modal2.default,
      Object.assign({ id: htmlId, className: mergedClasses }, props),
      hasBreadcrumb ? _react2.default.createElement(
        _Modal2.default.Header,
        { closeButton: closeButton },
        _react2.default.createElement(_FullPageModalBreadcrumb2.default, { htmlId: htmlId + 'ModalBreadcrumb', config: breadcrumb })
      ) : _react2.default.createElement(
        _Modal2.default.Header,
        { closeButton: closeButton },
        hasHeader ? header : ' '
      ),
      _react2.default.createElement(
        _Modal2.default.Body,
        null,
        children
      ),
      footer && footer !== null ? _react2.default.createElement(
        _Modal2.default.Footer,
        null,
        footer
      ) : null
    )
  );
};

FullPageModal.propTypes = {
  /** Breadcrumb passed to the modal. */
  breadcrumb: _propTypes2.default.array,

  /** Any child components. */
  children: _propTypes2.default.node,

  /** Component className. */
  className: _propTypes2.default.string,

  /** Displays close button when true. */
  closeButton: _propTypes2.default.bool,

  /** Footer for modal. */
  footer: _propTypes2.default.node,

  /** Header for modal. */
  header: _propTypes2.default.node,

  /** Globally unique and descriptive HTML ID. Used by QA for automated testing. */
  htmlId: _propTypes2.default.string.isRequired
};

FullPageModal.defaultProps = {
  closeButton: true
};

FullPageModal.Title = _Modal2.default.Title;

exports.default = FullPageModal;