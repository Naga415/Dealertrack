'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ChevronLeft = require('react-entypo/lib/entypo/ChevronLeft');

var _ChevronLeft2 = _interopRequireDefault(_ChevronLeft);

var _Breadcrumb = require('react-bootstrap/lib/Breadcrumb');

var _Breadcrumb2 = _interopRequireDefault(_Breadcrumb);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var FullPageModalBreadcrumb = function FullPageModalBreadcrumb(_ref) {
  var htmlId = _ref.htmlId,
      className = _ref.className,
      config = _ref.config;

  var mergedClasses = "modal-breadcrumb" + (className ? ' ' + className : '');
  return _react2.default.createElement(
    _Breadcrumb2.default,
    { id: htmlId, className: mergedClasses },
    _react2.default.createElement(
      _Breadcrumb2.default.Item,
      { className: 'modal-breadcrumb__back', onClick: config[config.length - 2] && config[config.length - 2].onClick ? config[config.length - 2].onClick : null },
      _react2.default.createElement(_ChevronLeft2.default, { valign: true })
    ),
    config.map(function (path, idx) {
      var isLastItem = config.length === idx + 1;
      var disableButton = isLastItem || config.length === 1 && idx === 0;

      return _react2.default.createElement(
        _Breadcrumb2.default.Item,
        {
          className: "modal-breadcrumb__item" + (disableButton ? " disabled" : " active"),
          key: htmlId + 'Breadcrumb' + idx,
          onClick: path.onClick ? path.onClick : null,
          disabled: disableButton },
        path.text ? path.text : ''
      );
    })
  );
};

FullPageModalBreadcrumb.propTypes = {
  /** className for component */
  className: _propTypes2.default.string,

  /** BreadCrumb item config containing text and its respective callback onClick */
  config: _propTypes2.default.arrayOf(_propTypes2.default.shape({
    text: _propTypes2.default.string.isRequired,
    onClick: _propTypes2.default.func
  })),

  /** Globally unique and descriptive HTML ID. Used by QA for automated testing. */
  htmlId: _propTypes2.default.string.isRequired
};

exports.default = FullPageModalBreadcrumb;