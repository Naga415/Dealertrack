'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _ControlLabel = require('react-bootstrap/lib/ControlLabel');

var _ControlLabel2 = _interopRequireDefault(_ControlLabel);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

require('./_label.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/**
 * Label is a wrapper of ControlLabel that applies a className-label class
 * and adds a class of fieldIsRequired if required is true.
 */
var Label = function Label(_ref) {
  var htmlId = _ref.htmlId,
      required = _ref.required,
      className = _ref.className,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['htmlId', 'required', 'className', 'children']);

  var classList = className ? className.split(' ') : [];
  classList = classList.map(function (value) {
    if (value.trim()) {
      return value + '-label';
    } else {
      return '';
    }
  });

  if (required) {
    classList.push("control-label--required");
  }
  delete props.className;

  return _react2.default.createElement(
    _ControlLabel2.default,
    {
      className: (0, _classnames2.default)(classList)
    },
    children
  );
};

Label.propTypes = {
  /** Any children to be passed through. */
  children: _propTypes2.default.string,

  /** The className for the formGroup. Will append -label automatically. */
  className: _propTypes2.default.string,

  /** Globally unique and descriptive HTML ID. Used by QA for automated testing. */
  htmlId: _propTypes2.default.string.isRequired,

  /** Whether the attached control is required. */
  required: _propTypes2.default.bool
};

exports.default = Label;