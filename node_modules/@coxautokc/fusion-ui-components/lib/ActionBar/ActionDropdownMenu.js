'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _IconMoreVert = require('@coxautokc/fusion-ui-components/lib/Icons/IconMoreVert');

var _IconMoreVert2 = _interopRequireDefault(_IconMoreVert);

var _DropdownButton = require('react-bootstrap/lib/DropdownButton');

var _DropdownButton2 = _interopRequireDefault(_DropdownButton);

var _MenuItem = require('react-bootstrap/lib/MenuItem');

var _MenuItem2 = _interopRequireDefault(_MenuItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionDropdownMenu = function ActionDropdownMenu(_ref) {
  var htmlId = _ref.htmlId,
      actionDropdowns = _ref.actionDropdowns,
      toggleAction = _ref.toggleAction;

  return _react2.default.createElement(
    'div',
    { id: htmlId, className: 'action-bar__dropdown pull-right' },
    _react2.default.createElement(
      _DropdownButton2.default,
      {
        title: _react2.default.createElement(_IconMoreVert2.default, null),
        id: 'action-bar-nested-dropdown',
        noCaret: true,
        className: 'action-bar__dropdown-button',
        onSelect: toggleAction
      },
      actionDropdowns.map(function (eachAction, key) {
        var actionItem = eachAction.actionItem,
            actionKey = eachAction.actionKey,
            toggleMethod = eachAction.toggleMethod;
        var _actionItem$props = actionItem.props,
            actionDisplay = _actionItem$props.actionDisplay,
            showDivider = _actionItem$props.showDivider,
            enable = _actionItem$props.enable,
            label = _actionItem$props.label,
            link = _actionItem$props.link,
            openToComponent = _actionItem$props.openToComponent,
            name = _actionItem$props.name;

        var actionLink = actionDisplay === 'link' && link.url ? link : null;

        return [_react2.default.createElement(
          _MenuItem2.default,
          {
            id: htmlId + "-dropdown" + key,
            key: key,
            eventKey: { actionKey: actionKey, openToComponent: openToComponent, toggleMethod: toggleMethod, actionLink: actionLink, name: name },
            disabled: !enable
          },
          label
        ), showDivider && _react2.default.createElement(_MenuItem2.default, { divider: true })];
      })
    )
  );
};

ActionDropdownMenu.propTypes = {
  actionDropdowns: _propTypes2.default.array,
  htmlId: _propTypes2.default.string.isRequired,
  toggleAction: _propTypes2.default.func.isRequired
};

exports.default = ActionDropdownMenu;