'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Nav = require('react-bootstrap/lib/Nav');

var _Nav2 = _interopRequireDefault(_Nav);

var _ActionTab = require('./ActionTab');

var _ActionTab2 = _interopRequireDefault(_ActionTab);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ActionBarTabs = function ActionBarTabs(_ref) {
  var htmlId = _ref.htmlId,
      actionTabs = _ref.actionTabs,
      currentActionKey = _ref.currentActionKey,
      getTabWidths = _ref.getTabWidths,
      initialized = _ref.initialized,
      toggleAction = _ref.toggleAction;

  var style = !initialized ? { opacity: 0 } : null;

  return _react2.default.createElement(
    _Nav2.default,
    {
      id: htmlId,
      bsStyle: 'tabs',
      className: 'action-bar__action-tabs',
      style: style,
      activeKey: currentActionKey
    },
    actionTabs.map(function (eachAction, key) {
      var actionItem = eachAction.actionItem,
          actionKey = eachAction.actionKey,
          toggleMethod = eachAction.toggleMethod;
      var _actionItem$props = actionItem.props,
          actionDisplay = _actionItem$props.actionDisplay,
          enable = _actionItem$props.enable,
          icon = _actionItem$props.icon,
          label = _actionItem$props.label,
          link = _actionItem$props.link,
          name = _actionItem$props.name,
          responsiveClasses = _actionItem$props.responsiveClasses,
          openToComponent = _actionItem$props.openToComponent,
          onClick = _actionItem$props.onClick,
          showDivider = _actionItem$props.showDivider;

      var classNames = showDivider ? 'action-bar__button action-bar__divider ' : 'action-bar__button ';
      var actionLink = actionDisplay === 'link' && link.url ? link : null;

      return _react2.default.createElement(_ActionTab2.default, Object.assign({
        htmlId: htmlId + "-tab" + key,
        key: key,
        onSelect: toggleAction
      }, { actionKey: actionKey, actionLink: actionLink, classNames: classNames, enable: enable, getTabWidths: getTabWidths, icon: icon, label: label, name: name, onClick: onClick, openToComponent: openToComponent, responsiveClasses: responsiveClasses, toggleMethod: toggleMethod }));
    })
  );
};

ActionBarTabs.propTypes = {
  actionTabs: _propTypes2.default.array,
  currentActionKey: _propTypes2.default.number,
  getTabWidths: _propTypes2.default.func.isRequired,
  htmlId: _propTypes2.default.string.isRequired,
  initialized: _propTypes2.default.bool.isRequired,
  toggleAction: _propTypes2.default.func.isRequired
};

exports.default = ActionBarTabs;