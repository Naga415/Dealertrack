'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require('@coxautokc/fusion-ui-components/lib/Button');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

/** Disables the submit button while loading is true. Displays normally
 * when loading is set to false. This component wraps Button and will fire the button's onClick event when clicked.
 */
var SubmitButton = function SubmitButton(_ref) {
  var loading = _ref.loading,
      loadingText = _ref.loadingText,
      bsStyle = _ref.bsStyle,
      children = _ref.children,
      htmlId = _ref.htmlId,
      rest = _objectWithoutProperties(_ref, ['loading', 'loadingText', 'bsStyle', 'children', 'htmlId']);

  var buttonType = bsStyle || 'primary';
  if (loading) {
    return _react2.default.createElement(
      _Button2.default,
      { htmlId: htmlId, buttonStyle: buttonType, disabled: true },
      _react2.default.createElement(
        'div',
        { className: 'button spinner' },
        _react2.default.createElement('div', null),
        ' '
      ),
      _react2.default.createElement(
        'span',
        null,
        loadingText
      )
    );
  } else {
    return _react2.default.createElement(
      _Button2.default,
      Object.assign({ htmlId: htmlId, buttonStyle: buttonType }, rest),
      children
    );
  }
};

SubmitButton.propTypes = {
  /** Any bsStyle to apply. */
  bsStyle: _propTypes2.default.string,

  /** Any children to be passed through. Specifically, the text for the button. */
  children: _propTypes2.default.node,

  /** Globally unique and descriptive HTML ID. Used by QA for automated testing. */
  htmlId: _propTypes2.default.string.isRequired,

  /** Disable button and display loading message when true. */
  loading: _propTypes2.default.bool,

  /** Text to display when loading is set to true. */
  loadingText: _propTypes2.default.string,

  /** onClick callback. Called with <code>cb(event)</code>. */
  onClick: _propTypes2.default.func.isRequired
};

exports.default = SubmitButton;