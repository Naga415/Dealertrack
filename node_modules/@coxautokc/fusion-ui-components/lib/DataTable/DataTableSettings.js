'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _FormControl = require('react-bootstrap/lib/FormControl');

var _FormControl2 = _interopRequireDefault(_FormControl);

var _FormGroup = require('react-bootstrap/lib/FormGroup');

var _FormGroup2 = _interopRequireDefault(_FormGroup);

var _ControlLabel = require('react-bootstrap/lib/ControlLabel');

var _ControlLabel2 = _interopRequireDefault(_ControlLabel);

var _Row = require('react-bootstrap/lib/Row');

var _Row2 = _interopRequireDefault(_Row);

var _Col = require('react-bootstrap/lib/Col');

var _Col2 = _interopRequireDefault(_Col);

var _Well = require('react-bootstrap/lib/Well');

var _Well2 = _interopRequireDefault(_Well);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var DataTableSettings = function (_React$Component) {
  _inherits(DataTableSettings, _React$Component);

  function DataTableSettings(props) {
    _classCallCheck(this, DataTableSettings);

    var _this = _possibleConstructorReturn(this, (DataTableSettings.__proto__ || Object.getPrototypeOf(DataTableSettings)).call(this, props));

    _this.onChange = function (e) {
      var value = parseInt(e.target.value, 10);
      _this.props.onChange(value);
      _this.setState({ value: value });
    };

    _this.state = {
      value: _this.props.value
    };
    return _this;
  }

  _createClass(DataTableSettings, [{
    key: 'render',
    value: function render() {
      var pageSizeOptions = this.props.pageSizeOptions;
      var value = this.state.value;


      return _react2.default.createElement(
        _Well2.default,
        { className: 'griddle-settings' },
        _react2.default.createElement(
          _Row2.default,
          null,
          _react2.default.createElement(
            _Col2.default,
            { xs: 12 },
            _react2.default.createElement(
              'h5',
              null,
              'Settings'
            )
          )
        ),
        _react2.default.createElement(
          _Row2.default,
          null,
          _react2.default.createElement(
            _Col2.default,
            { xs: 12, sm: 6, md: 3 },
            _react2.default.createElement(
              _FormGroup2.default,
              {
                className: "className",
                controlId: "htmlId"
              },
              _react2.default.createElement(
                _ControlLabel2.default,
                null,
                'Rows per page:'
              ),
              _react2.default.createElement(
                _FormControl2.default,
                {
                  id: "htmlId",
                  name: "name",
                  componentClass: 'select',
                  value: value,
                  onChange: this.onChange },
                pageSizeOptions.map(function (option) {
                  return _react2.default.createElement(
                    'option',
                    { key: option, value: option },
                    option
                  );
                })
              )
            )
          )
        )
      );
    }
  }]);

  return DataTableSettings;
}(_react2.default.Component);

DataTableSettings.propTypes = {
  onChange: _propTypes2.default.func,
  pageSizeOptions: _propTypes2.default.array,
  value: _propTypes2.default.number
};

DataTableSettings.defaultProps = {};

exports.default = DataTableSettings;