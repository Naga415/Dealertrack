@import '~@coxautokc/fusion-theme/dist/fusion-variables';

$C : 'accordion'; // namespace for component

$chevronup: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20class%3D%22entypo-svgicon%20entypo--ChevronUp%22%20display%3D%22inline%22%20height%3D%221em%22%20width%3D%221em%22%20fill%3D%22rgba(0%2C0%2C0%2C.87)%22%20viewbox%3D%220%200%2020%2020%22%20preserveAspectRatio%3D%22xMidYMid%20meet%22%3E%3Cpath%20d%3D%22M15.484%2C12.452c-0.436%2C0.446-1.043%2C0.481-1.576%2C0L10%2C8.705l-3.908%2C3.747c-0.533%2C0.481-1.141%2C0.446-1.574%2C0c-0.436-0.445-0.408-1.197%2C0-1.615c0.406-0.418%2C4.695-4.502%2C4.695-4.502C9.43%2C6.112%2C9.715%2C6%2C10%2C6s0.57%2C0.112%2C0.789%2C0.335c0%2C0%2C4.287%2C4.084%2C4.695%2C4.502C15.893%2C11.255%2C15.92%2C12.007%2C15.484%2C12.452z%22%2F%3E%3C%2Fsvg%3E');
$chevrondown: url('data:image/svg+xml;charset=utf8,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20display%3D%22inline%22%20height%3D%221em%22%20width%3D%221em%22%20fill%3D%22rgba(0%2C0%2C0%2C.87)%22%20viewbox%3D%220%200%2020%2020%22%20preserveAspectRatio%3D%22xMidYMid%20meet%22%3E%3Cpath%20d%3D%22M4.516%2C7.548c0.436-0.446%2C1.043-0.481%2C1.576%2C0L10%2C11.295l3.908-3.747c0.533-0.481%2C1.141-0.446%2C1.574%2C0c0.436%2C0.445%2C0.408%2C1.197%2C0%2C1.615c-0.406%2C0.418-4.695%2C4.502-4.695%2C4.502C10.57%2C13.888%2C10.285%2C14%2C10%2C14s-0.57-0.112-0.789-0.335c0%2C0-4.287-4.084-4.695-4.502C4.107%2C8.745%2C4.08%2C7.993%2C4.516%2C7.548z%22%2F%3E%3C%2Fsvg%3E');

// From Panels

@mixin accordion-variant($border, $heading-text-color, $heading-bg-color, $heading-border) {
  border-color: $border;

  & > .#{$C}-heading {
    color: $heading-text-color;
    background-color: $heading-bg-color;
    border-color: $heading-border;

    + .#{$C}-collapse {
      width: 100%;

      > .#{$C}-body {
        border-top-color: $border;
      }
    }

    .badge {
      color: $heading-bg-color;
      background-color: $heading-text-color;
    }
  }

  &.#{$C}--body-hide > .collapse {
    display: block;
    height: 0;
    overflow: hidden;

    &.in {
      height: auto;
    }
  }

  & > .#{$C}-footer {
    + .#{$C}-collapse > .#{$C}-body {
      border-bottom-color: $border;
    }
  }
}

@mixin clearfix() {
  &::before,
  &::after {
    content: " ";
    display: table;
  }

  &::after {
    clear: both;
  }
}

// From Tracksuit
.#{$C} {
  box-sizing: border-box;

  > &-heading {
    border-bottom: none;
  }
}

.#{$C}-primary,
.#{$C}-success,
.#{$C}-warning,
.#{$C}-info,
.#{$C}-danger {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  position: relative;

  &::before {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 6px;
    background-color: $brand-primary;
  }
}

.#{$C}-warning::before {
  background-color: $brand-warning;
}

.#{$C}-success::before {
  background-color: $brand-success;
}

.#{$C}-info::before {
  background-color: $brand-info;
}

.#{$C}-danger::before {
  background-color: $brand-danger;
}

// From Bootstrap

//
// Panels
// --------------------------------------------------

// Base class
.#{$C} {
  margin-bottom: $line-height-computed;
  background-color: $panel-bg;
  border: 1px solid transparent;
  border-radius: $panel-border-radius;
  overflow: hidden;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
}

// Panel contents
.#{$C}-body {
  padding: $panel-body-padding;

  @include clearfix;
}

// Optional heading
.#{$C}-heading {
  padding: 0;
  border-top-right-radius: $panel-border-radius - 1;
  border-top-left-radius: $panel-border-radius - 1;

  > .dropdown .dropdown-toggle {
    color: inherit;
  }
}

// Within heading, strip any `h*` tag of its default margins for spacing.
.#{$C}-title {
  margin-top: 0;
  margin-bottom: 0;
  font-size: ceil(($font-size-base * 1.125));
  color: inherit;

  > a,
  > small,
  > .small,
  > small > a,
  > .small > a {
    color: inherit;
  }

  // chevron
  > a {
    display: block;
    padding: 20px 36px 20px 20px;
    border-radius: $panel-border-radius - 1;
    position: relative;

    &:focus,
    &:hover {
      text-decoration: none;
    }

    &[aria-expanded=false]::after {
      content: $chevrondown;
    }

    &[aria-expanded=true]::after {
      content: $chevronup;
    }

    &::after {
      display: flex;
      height: 100%;
      padding: 0 0 0 20px;
      position: absolute;
      top: 0;
      right: 20px;
      bottom: 0;
      color: inherit;
      justify-content: center;
      flex-direction: column;
    }
  }
}

// Optional footer (stays gray in every modifier class)
.#{$C}-footer {
  padding: $panel-footer-padding;
  background-color: $panel-footer-bg;
  border-top: 1px solid $panel-inner-border;
  border-bottom-right-radius: ($panel-border-radius - 1);
  border-bottom-left-radius: ($panel-border-radius - 1);
}

// List groups in panels
//
// By default, space out list group content from panel headings to account for
// any kind of custom content between the two.

.#{$C} {
  > .list-group,
  > &-collapse > .list-group {
    margin-bottom: 0;

    .list-group-item {
      border-width: 1px 0;
      border-radius: 0;
    }

    // Add border top radius for first one
    &:first-child {
      .list-group-item:first-child {
        border-top: 0;
        border-top-left-radius: ($panel-border-radius - 1);
        border-top-right-radius: ($panel-border-radius - 1);
      }
    }

    // Add border bottom radius for last one
    &:last-child {
      .list-group-item:last-child {
        border-bottom: 0;
        border-bottom-right-radius: ($panel-border-radius - 1);
        border-bottom-left-radius: ($panel-border-radius - 1);
      }
    }
  }

  > &-heading + &-collapse > .list-group {
    .list-group-item:first-child {
      border-top-right-radius: 0;
      border-top-left-radius: 0;
    }
  }
}
// Collapse space between when there's no additional content.
.#{$C}-heading + .list-group {
  .list-group-item:first-child {
    border-top-width: 0;
  }
}

.list-group + .#{$C}-footer {
  border-top-width: 0;
}

// Tables in panels
//
// Place a non-bordered `.table` within a panel (not within a `.#{$C}-body`) and
// watch it go full width.

.#{$C} {
  > .table,
  > .table-responsive > .table,
  > &-collapse > .table {
    margin-bottom: 0;

    caption {
      padding-left: $panel-body-padding;
      padding-right: $panel-body-padding;
    }
  }

  // Add border top radius for first one
  > .table:first-child,
  > .table-responsive:first-child > .table:first-child {
    border-top-right-radius: ($panel-border-radius - 1);
    border-top-left-radius: ($panel-border-radius - 1);

    > thead:first-child,
    > tbody:first-child {
      > tr:first-child {
        border-top-left-radius: ($panel-border-radius - 1);
        border-top-right-radius: ($panel-border-radius - 1);

        td:first-child,
        th:first-child {
          border-top-left-radius: ($panel-border-radius - 1);
        }

        td:last-child,
        th:last-child {
          border-top-right-radius: ($panel-border-radius - 1);
        }
      }
    }
  }
  // Add border bottom radius for last one
  > .table:last-child,
  > .table-responsive:last-child > .table:last-child {
    border-bottom-right-radius: ($panel-border-radius - 1);
    border-bottom-left-radius: ($panel-border-radius - 1);

    > tbody:last-child,
    > tfoot:last-child {
      > tr:last-child {
        border-bottom-left-radius: ($panel-border-radius - 1);
        border-bottom-right-radius: ($panel-border-radius - 1);

        td:first-child,
        th:first-child {
          border-bottom-left-radius: ($panel-border-radius - 1);
        }

        td:last-child,
        th:last-child {
          border-bottom-right-radius: ($panel-border-radius - 1);
        }
      }
    }
  }

  > &-body + .table,
  > &-body + .table-responsive,
  > .table + &-body,
  > .table-responsive + &-body {
    border-top: 1px solid $table-border-color;
  }

  > .table > tbody:first-child > tr:first-child th,
  > .table > tbody:first-child > tr:first-child td {
    border-top: 0;
  }

  > .table-bordered,
  > .table-responsive > .table-bordered {
    border: 0;

    > thead,
    > tbody,
    > tfoot {
      > tr {
        > th:first-child,
        > td:first-child {
          border-left: 0;
        }

        > th:last-child,
        > td:last-child {
          border-right: 0;
        }
      }
    }

    > thead,
    > tbody {
      > tr:first-child {
        > td,
        > th {
          border-bottom: 0;
        }
      }
    }

    > tbody,
    > tfoot {
      > tr:last-child {
        > td,
        > th {
          border-bottom: 0;
        }
      }
    }
  }

  > .table-responsive {
    border: 0;
    margin-bottom: 0;
  }
}

// Collapsible panels (aka, accordion)
//
// Wrap a series of panels in `{namespace}-group` to turn them into an accordion with
// the help of React-Bootstrap's collapse JavaScript plugin.

.#{$C}-group {
  margin-bottom: $line-height-computed;

  // Tighten up margin so it's only between panels
  .#{$C} {
    margin-bottom: 0;
    border-radius: $panel-border-radius;

    + .#{$C} {
      margin-top: 5px;
    }
  }

  &-heading {
    border-bottom: 0;

    + &-collapse > &-body,
    + &-collapse > .list-group {
      border-top: 1px solid $panel-inner-border;
    }
  }

  &-footer {
    border-top: 0;

    + &-collapse &-body {
      border-bottom: 1px solid $panel-inner-border;
    }
  }
}

// Contextual variations
.#{$C}-default {
  @include accordion-variant($gray, $panel-default-text, $panel-default-heading-bg, $panel-default-border);
}

.#{$C}-primary {
  @include accordion-variant($panel-primary-border, $panel-primary-text, $panel-primary-heading-bg, $panel-primary-border);
}

.#{$C}-success {
  @include accordion-variant($panel-success-border, $panel-success-text, $panel-success-heading-bg, $panel-success-border);
}

.#{$C}-info {
  @include accordion-variant($panel-info-border, $panel-info-text, $panel-info-heading-bg, $panel-info-border);
}

.#{$C}-warning {
  @include accordion-variant($panel-warning-border, $panel-warning-text, $panel-warning-heading-bg, $panel-warning-border);
}

.#{$C}-danger {
  @include accordion-variant($panel-danger-border, $panel-danger-text, $panel-danger-heading-bg, $panel-danger-border);
}
