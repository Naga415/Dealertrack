"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _checkbox = require("./customizedUiComponents/checkbox");

var _checkbox2 = _interopRequireDefault(_checkbox);

var _dropdown = require("./customizedUiComponents/dropdown");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _constants = require("../constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var EditTaxProfile = function (_React$Component) {
  _inherits(EditTaxProfile, _React$Component);

  function EditTaxProfile() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, EditTaxProfile);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = EditTaxProfile.__proto__ || Object.getPrototypeOf(EditTaxProfile)).call.apply(_ref, [this].concat(args))), _this), _this.getOnChangeHandler = function (input) {
      return function (val) {
        return _this.props.updateInput(input, val);
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(EditTaxProfile, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          name = _props.name,
          noTaxes = _props.noTaxes,
          state = _props.state,
          zipcode = _props.zipcode,
          isDisabled = _props.isDisabled;

      return _react2.default.createElement(
        "div",
        { className: "row", id: "edit-tax-profile" },
        _react2.default.createElement(
          "div",
          { id: "noTaxes", className: "col-xs-2 col-xs-offset-half" },
          _react2.default.createElement(_checkbox2.default, {
            name: "noTaxes",
            label: "No Taxes",
            checked: noTaxes,
            onChange: this.getOnChangeHandler("noTaxes")
          })
        ),
        _react2.default.createElement(
          "div",
          { id: "taxesProfile", className: "col-xs-5" },
          _react2.default.createElement(_dropdown2.default, {
            name: "profile",
            label: "Profile",
            options: _constants.profileOptions,
            value: this.props["profile"],
            disabled: isDisabled,
            onChange: this.getOnChangeHandler("profile")
          })
        ),
        _react2.default.createElement(
          "div",
          { id: "taxes-state-zipcode", className: "col-xs-2" },
          _react2.default.createElement(
            "label",
            { className: "boldify zipcode-text", htmlFor: name },
            state,
            ",",
            zipcode
          )
        )
      );
    }
  }]);

  return EditTaxProfile;
}(_react2.default.Component);

exports.default = EditTaxProfile;


EditTaxProfile.propTypes = {
  isDisabled: _propTypes2.default.bool,
  name: _propTypes2.default.string,
  noTaxes: _propTypes2.default.bool,
  profile: _propTypes2.default.object,
  state: _propTypes2.default.string,
  updateInput: _propTypes2.default.func,
  zipcode: _propTypes2.default.string
};