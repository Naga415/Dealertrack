"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _input = require("./customizedUiComponents/input");

var _input2 = _interopRequireDefault(_input);

var _checkbox = require("./customizedUiComponents/checkbox");

var _checkbox2 = _interopRequireDefault(_checkbox);

var _dropdown = require("./customizedUiComponents/dropdown");

var _dropdown2 = _interopRequireDefault(_dropdown);

var _constants = require("../constants");

var _tooltip = require("./customizedUiComponents/tooltip/tooltip");

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** Edit Taxes -- Tax Setup Tab Content **/


var TaxSetup = function (_React$Component) {
  _inherits(TaxSetup, _React$Component);

  function TaxSetup() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TaxSetup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TaxSetup.__proto__ || Object.getPrototypeOf(TaxSetup)).call.apply(_ref, [this].concat(args))), _this), _this.getOnChangeHandler = function (input) {
      return function (val) {
        return _this.props.updateInput(input, val);
      };
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(TaxSetup, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          isDisabled = _props.isDisabled,
          name = _props.name;


      return _react2.default.createElement(
        "div",
        { className: "tax-setup-container", id: "edit-tax-setup" },
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-retail-flat", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "retail-flat",
              label: "Retail Flat",
              value: this.props["retailFlat"],
              disabled: isDisabled,
              addOnClassName: "fa fa-usd",
              addOnIndentation: "left",
              onChange: this.getOnChangeHandler("retailFlat")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-retail-trade-credit", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "retail-trade-credit",
              label: "Retail-Trade Credit",
              options: _constants.retailTradeCreditOptions,
              value: this.props["retailTradeCredit"],
              disabled: isDisabled,
              onChange: this.getOnChangeHandler("retailTradeCredit")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-retail-tarde-credit-amount", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "trade-credit-amountt",
              label: "Trade Credit Amount",
              value: this.props["retailTradeCreditAmount"],
              disabled: isDisabled,
              addOnClassName: "fa fa-usd",
              addOnIndentation: "left",
              onChange: this.getOnChangeHandler("retailTradeCreditAmount")
            })
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-retail-tax-percent", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "retail-tax-percent",
              label: "Retail Tax",
              value: this.props["retailTaxPercent"],
              disabled: isDisabled,
              addOnClassName: "fa fa-percent",
              addOnIndentation: "right",
              onChange: this.getOnChangeHandler("retailTaxPercent")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-retail-tax-method", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "retail-tax-method",
              label: "Method",
              options: _constants.retailTaxMethodOptions,
              value: this.props["retailTaxMethod"],
              disabled: isDisabled,
              required: true,
              onChange: this.getOnChangeHandler("retailTaxMethod")
            }),
            _react2.default.createElement(
              "div",
              { id: "taxes-retail-tooltip", className: "col-xs-1" },
              _react2.default.createElement(
                "span",
                null,
                _react2.default.createElement(_tooltip2.default, { tooltipText: "Retail tax Method Options" })
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "col-xs-4" },
            "Apply to"
          ),
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { id: "taxes-retail-tax-fees", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "retail-tax-fees",
                label: "Fees",
                checked: this.props["retailTaxFees"],
                onChange: this.getOnChangeHandler("retailTaxFees")
              })
            ),
            _react2.default.createElement(
              "div",
              { id: "taxes-retail-tax-products", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "retail-tax-products",
                label: "Products",
                checked: this.props["retailTaxProducts"],
                onChange: this.getOnChangeHandler("retailTaxProducts")
              })
            )
          )
        ),
        _react2.default.createElement("hr", null),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-capitalize", className: "col-xs-2" },
            _react2.default.createElement(_checkbox2.default, {
              name: "capitalize",
              label: "Capitalize",
              disabled: isDisabled,
              checked: this.props["capitalize"],
              onChange: this.getOnChangeHandler("capitalize")
            })
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-lease-flat", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "lease-flat",
              label: "Lease Flat",
              value: this.props["leaseFlat"],
              disabled: isDisabled,
              addOnClassName: "fa fa-usd",
              addOnIndentation: "left",
              onChange: this.getOnChangeHandler("leaseFlat")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-lease-trade-credit", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "lease-trade-credit",
              label: "Lease Trade Credit",
              options: _constants.leaseTradeCreditOptions,
              value: this.props["leaseTradeCredit"],
              disabled: isDisabled,
              onChange: this.getOnChangeHandler("leaseTradeCredit")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-lease-trade-credit-amount", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "trade-credit-amountt",
              label: "Trade Credit Amount",
              value: this.props["leaseTradeCreditAmount"],
              disabled: isDisabled,
              addOnClassName: "fa fa-usd",
              addOnIndentation: "left",
              onChange: this.getOnChangeHandler("leaseTradeCreditAmount")
            })
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-lease-tax-percent", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "lease-tax-percent",
              label: "Lease Tax",
              value: this.props["leaseTaxPercent"],
              disabled: isDisabled,
              addOnClassName: "fa fa-percent",
              addOnIndentation: "right",
              onChange: this.getOnChangeHandler("leaseTaxPercent")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-lease-tax-method", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "lease-tax-method",
              label: "Method",
              options: _constants.leaseTaxMethodOptions,
              value: this.props["leaseTaxMethod"],
              disabled: isDisabled,
              required: true,
              onChange: this.getOnChangeHandler("leaseTaxMethod")
            }),
            _react2.default.createElement(
              "div",
              { id: "taxes-lease-tooltip", className: "col-xs-1" },
              _react2.default.createElement(
                "span",
                null,
                _react2.default.createElement(_tooltip2.default, { tooltipText: "Lease tax Method Options" })
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "col-xs-4" },
            "Apply to"
          ),
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { id: "taxes-lease-fees", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "lease-tax-fees",
                label: "Fees",
                checked: this.props["leaseTaxFees"],
                onChange: this.getOnChangeHandler("leaseTaxFees")
              })
            ),
            _react2.default.createElement(
              "div",
              { id: "taxes-lease-products", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "lease-tax-products",
                label: "Products",
                checked: this.props["leaseTaxProducts"],
                onChange: this.getOnChangeHandler("leaseTaxProducts")
              })
            )
          ),
          _react2.default.createElement("hr", null)
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-mut-percent", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "monthly-use-tax-percent",
              label: "Monthly Use Tax",
              value: this.props["monthlyUseTaxPercent"],
              disabled: isDisabled,
              addOnClassName: "fa fa-percent",
              addOnIndentation: "right",
              onChange: this.getOnChangeHandler("monthlyUseTaxPercent")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-mut-method", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "monthly-tax-method",
              label: "Method",
              options: _constants.monthlyTaxMethodOptions,
              value: this.props["monthlyTaxMethod"],
              disabled: isDisabled,
              required: true,
              onChange: this.getOnChangeHandler("monthlyTaxMethod")
            }),
            _react2.default.createElement(
              "div",
              { id: "taxes-mut-tooltip", className: "col-xs-1" },
              _react2.default.createElement(
                "span",
                null,
                _react2.default.createElement(_tooltip2.default, { tooltipText: "Monthly tax Method Options" })
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "col-xs-4" },
            "Apply to"
          ),
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { id: "taxes-mut-fees", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "monthly-tax-fees",
                label: "Fees",
                checked: this.props["monthlyTaxFees"],
                onChange: this.getOnChangeHandler("monthlyTaxFees")
              })
            ),
            _react2.default.createElement(
              "div",
              { id: "taxes-mut-products", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "monthly-tax-products",
                label: "Products",
                checked: this.props["monthlyTaxProducts"],
                onChange: this.getOnChangeHandler("monthlyTaxProducts")
              })
            )
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { id: "taxes-crt-percent", className: "col-xs-3" },
            _react2.default.createElement(_input2.default, {
              name: "cap-reduction-tax-percent",
              label: "Cap Reduction Tax",
              value: this.props["capReductionTaxPercent"],
              disabled: isDisabled,
              addOnClassName: "fa fa-percent",
              addOnIndentation: "right",
              onChange: this.getOnChangeHandler("capReductionTaxPercent")
            })
          ),
          _react2.default.createElement(
            "div",
            { id: "taxes-crt-method", className: "col-xs-5" },
            _react2.default.createElement(_dropdown2.default, {
              name: "cap-reduction-tax-method",
              label: "Method",
              options: _constants.capReductionTaxMethodOptions,
              value: this.props["capReductionTaxMethod"],
              disabled: isDisabled,
              required: true,
              onChange: this.getOnChangeHandler("capReductionTaxMethod")
            }),
            _react2.default.createElement(
              "div",
              { id: "taxes-crt-tooltip", className: "col-xs-1" },
              _react2.default.createElement(
                "span",
                null,
                _react2.default.createElement(_tooltip2.default, { tooltipText: "Cap Reduction tax Method Options" })
              )
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "col-xs-4" },
            "Apply to"
          ),
          _react2.default.createElement(
            "div",
            { className: "row" },
            _react2.default.createElement(
              "div",
              { id: "taxes-crt-fees", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "cap-tax-fees",
                label: "Fees",
                checked: this.props["capTaxFees"],
                onChange: this.getOnChangeHandler("capTaxFees")
              })
            ),
            _react2.default.createElement(
              "div",
              { id: "taxes-crt-products", className: "col-xs-1" },
              _react2.default.createElement(_checkbox2.default, {
                name: "cap-tax-products",
                label: "Products",
                checked: this.props["capTaxProducts"],
                onChange: this.getOnChangeHandler("capTaxProducts")
              })
            )
          )
        ),
        _react2.default.createElement(
          "div",
          { className: "row" },
          _react2.default.createElement(
            "div",
            { className: "col-xs-2" },
            _react2.default.createElement(
              "label",
              { className: "boldify", htmlFor: name },
              "Total: $ 0"
            )
          ),
          _react2.default.createElement(
            "div",
            { className: "col-xs-6" },
            _react2.default.createElement(
              "label",
              {
                className: "boldify col-xs-9 col-xs-offset-10 sales",
                htmlFor: name
              },
              "Sales $ 0 | MUT $ 0 |CRT $ 0"
            )
          )
        )
      );
    }
  }]);

  return TaxSetup;
}(_react2.default.Component);

exports.default = TaxSetup;


TaxSetup.propTypes = {
  capitalize: _propTypes2.default.bool,
  capReductionTaxMethod: _propTypes2.default.object,
  capReductionTaxPercent: _propTypes2.default.string,
  capTaxFees: _propTypes2.default.bool,
  capTaxProducts: _propTypes2.default.bool,
  isDisabled: _propTypes2.default.bool,
  leaseFlat: _propTypes2.default.string,
  leaseTaxFees: _propTypes2.default.bool,
  leaseTaxMethod: _propTypes2.default.object,
  leaseTaxPercent: _propTypes2.default.string,
  leaseTaxProducts: _propTypes2.default.bool,
  leaseTradeCredit: _propTypes2.default.object,
  leaseTradeCreditAmount: _propTypes2.default.string,
  monthlyTaxFees: _propTypes2.default.bool,
  monthlyTaxMethod: _propTypes2.default.object,
  monthlyTaxProducts: _propTypes2.default.bool,
  monthlyUseTaxPercent: _propTypes2.default.string,
  name: _propTypes2.default.string,
  retailFlat: _propTypes2.default.string,
  retailTaxFees: _propTypes2.default.bool,
  retailTaxMethod: _propTypes2.default.object,
  retailTaxPercent: _propTypes2.default.string,
  retailTaxProducts: _propTypes2.default.bool,
  retailTradeCredit: _propTypes2.default.object,
  retailTradeCreditAmount: _propTypes2.default.string,
  updateInput: _propTypes2.default.func
};