"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ModalFooter;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _Button = require("@coxautokc/fusion-ui-components/lib/Button");

var _Button2 = _interopRequireDefault(_Button);

var _Row = require("@coxautokc/fusion-ui-components/lib/Row");

var _Row2 = _interopRequireDefault(_Row);

var _Col = require("@coxautokc/fusion-ui-components/lib/Col");

var _Col2 = _interopRequireDefault(_Col);

require("./ModalFooter.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ModalFooter(props) {
  var modalName = props.modalName,
      displayResetBtn = props.displayResetBtn,
      resetData = props.resetData,
      save = props.save,
      cancel = props.cancel,
      isDisabled = props.isDisabled;


  return _react2.default.createElement(
    "div",
    { id: "ModalFooter" },
    _react2.default.createElement(
      _Row2.default,
      { id: "buttongroup" },
      _react2.default.createElement(
        _Col2.default,
        { xs: 8, className: "leftbtn" },
        displayResetBtn && _react2.default.createElement(
          "div",
          {
            id: modalName + "-ModalReset",
            className: "leftbtn",
            onClick: resetData
          },
          _react2.default.createElement("i", { className: "fa fa-refresh fa-2x", "aria-hidden": "true" })
        )
      ),
      _react2.default.createElement(
        _Col2.default,
        { xs: 4, className: "buttons" },
        _react2.default.createElement(
          _Button2.default,
          {
            className: "cancel-btn",
            htmlId: modalName + "-modalCancel",
            onClick: cancel
          },
          "Cancel"
        ),
        _react2.default.createElement(
          _Button2.default,
          {
            disabled: isDisabled,
            className: "save-btn",
            htmlId: modalName + "-modalSave",
            onClick: save
          },
          "Save"
        )
      )
    )
  );
}

ModalFooter.propTypes = {
  cancel: _propTypes2.default.func.isRequired,
  displayResetBtn: _propTypes2.default.bool,
  isDisabled: _propTypes2.default.bool,
  modalName: _propTypes2.default.string.isRequired,
  resetData: _propTypes2.default.func,
  save: _propTypes2.default.func.isRequired
};

ModalFooter.default = {
  displayResetBtn: false
};