'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fetchFeeTaxSetupTableData = exports.fetchTaxSetupData = exports.fetchFeeTaxSetupTableDataSuccess = exports.fetchTaxSetupDataSuccess = exports.updateEditTaxProfileInput = exports.updateTaxSetupInput = exports.updateTaxesPageCurrentTab = exports.FEE_TAX_SETUP_KEYWORD = exports.FETCH_FEE_TAX_SETUP_DATA_FAILURE = exports.FETCH_FEE_TAX_SETUP_DATA_SUCCESS = exports.FETCH_TAX_SETUP_DATA_FAILURE = exports.FETCH_TAX_SETUP_DATA_SUCCESS = exports.TAX_SETUP_KEYWORD = exports.UPDATE_TAX_SETUP_INPUT = exports.UPDATE_EDIT_TAX_PROFILE_INPUT = exports.UPDATE_TAXES_PAGE_CURRENT_TAB = undefined;

require('whatwg-fetch');

var _taxSetupMock = require('../api/tax-setup-mock.json');

var _taxSetupMock2 = _interopRequireDefault(_taxSetupMock);

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Action Types */

var UPDATE_TAXES_PAGE_CURRENT_TAB = exports.UPDATE_TAXES_PAGE_CURRENT_TAB = 'UPDATE_TAXES_PAGE_CURRENT_TAB';
var UPDATE_EDIT_TAX_PROFILE_INPUT = exports.UPDATE_EDIT_TAX_PROFILE_INPUT = 'UPDATE_EDIT_TAX_PROFILE_INPUT';
var UPDATE_TAX_SETUP_INPUT = exports.UPDATE_TAX_SETUP_INPUT = 'UPDATE_TAX_SETUP_INPUT';
var TAX_SETUP_KEYWORD = exports.TAX_SETUP_KEYWORD = 'TAX_SETUP';
var FETCH_TAX_SETUP_DATA_SUCCESS = exports.FETCH_TAX_SETUP_DATA_SUCCESS = 'FETCH_TAX_SETUP_DATA_SUCCESS';
var FETCH_TAX_SETUP_DATA_FAILURE = exports.FETCH_TAX_SETUP_DATA_FAILURE = 'FETCH_TAX_SETUP_DATA_FAILURE';
var FETCH_FEE_TAX_SETUP_DATA_SUCCESS = exports.FETCH_FEE_TAX_SETUP_DATA_SUCCESS = 'FETCH_FEE_TAX_SETUP_DATA_SUCCESS';
var FETCH_FEE_TAX_SETUP_DATA_FAILURE = exports.FETCH_FEE_TAX_SETUP_DATA_FAILURE = 'FETCH_FEE_TAX_SETUP_DATA_FAILURE';
var FEE_TAX_SETUP_KEYWORD = exports.FEE_TAX_SETUP_KEYWORD = 'FEE_TAX_SETUP';

/* Sync actions */

var updateTaxesPageCurrentTab = exports.updateTaxesPageCurrentTab = function updateTaxesPageCurrentTab(tab) {
  return {
    type: UPDATE_TAXES_PAGE_CURRENT_TAB,
    payload: {
      tab: tab
    }
  };
};

var updateTaxSetupInput = exports.updateTaxSetupInput = function updateTaxSetupInput(field, value) {
  return {
    type: UPDATE_TAX_SETUP_INPUT,
    payload: {
      field: field,
      value: value
    }
  };
};

var updateEditTaxProfileInput = exports.updateEditTaxProfileInput = function updateEditTaxProfileInput(field, value) {
  return {
    type: UPDATE_EDIT_TAX_PROFILE_INPUT,
    payload: {
      field: field,
      value: value
    }
  };
};

var fetchTaxSetupDataSuccess = exports.fetchTaxSetupDataSuccess = function fetchTaxSetupDataSuccess(data) {
  return {
    type: FETCH_TAX_SETUP_DATA_SUCCESS,
    payload: {
      data: data
    }
  };
};

var fetchFeeTaxSetupTableDataSuccess = exports.fetchFeeTaxSetupTableDataSuccess = function fetchFeeTaxSetupTableDataSuccess(data) {
  return {
    type: FETCH_FEE_TAX_SETUP_DATA_SUCCESS,
    payload: {
      data: data
    }
  };
};

/* Async actions */
var fetchTaxSetupData = exports.fetchTaxSetupData = function fetchTaxSetupData() {
  return function (dispatch) {
    return new Promise(function (resolve) {
      // emulate async nature of this data request
      setTimeout(function () {
        return resolve(_taxSetupMock2.default);
      }, 2000);
    }).then(function (data) {
      return dispatch(fetchTaxSetupDataSuccess(data));
    });
  };
};

var fetchFeeTaxSetupTableData = exports.fetchFeeTaxSetupTableData = function fetchFeeTaxSetupTableData() {
  return function (dispatch) {
    return new Promise(function (resolve) {
      // emulate async nature of this data request
      setTimeout(function () {
        return resolve(_constants.feeTaxSetupTableData);
      }, 2000);
    }).then(function (data) {
      return dispatch(fetchFeeTaxSetupTableDataSuccess(data));
    });
  };
};