'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extend2 = require('lodash/extend');

var _extend3 = _interopRequireDefault(_extend2);

var _taxesPageActions = require('../actions/taxes-page-actions');

var _feeTaxSetupReducers = require('./fee-tax-setup-reducers');

var _feeTaxSetupReducers2 = _interopRequireDefault(_feeTaxSetupReducers);

var _taxSetupReducers = require('./tax-setup-reducers');

var _taxSetupReducers2 = _interopRequireDefault(_taxSetupReducers);

var _reducerUtils = require('../utils/reducer-utils');

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var initialState = {
  currentTab: _constants.TaxesPageTabs['tax-setup'],
  noTaxes: false,
  profile: null,
  state: 'State',
  zipcode: 'Zipcode',
  taxSetup: _taxSetupReducers.initialState,
  feeTaxSetup: _feeTaxSetupReducers.initialState
};

var taxesPage = function taxesPage() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  var updatedState = state;
  switch (action.type) {
    case _taxesPageActions.UPDATE_TAXES_PAGE_CURRENT_TAB:
      updatedState = (0, _extend3.default)({}, state, {
        currentTab: action.payload.tab
      });
      break;
    case _taxesPageActions.UPDATE_EDIT_TAX_PROFILE_INPUT:
      updatedState = (0, _extend3.default)({}, state, _defineProperty({}, action.payload.field, action.payload.value));
      break;
    case _taxesPageActions.FETCH_TAX_SETUP_DATA_SUCCESS:
      updatedState = (0, _extend3.default)({}, state, {
        noTaxes: action.payload.data[0]['no_tax_in'] === 'Y',
        state: action.payload.data[0]['state_code'],
        zipcode: action.payload.data[0]['zip_code']
      });
      break;
    default:
      break;
  }

  if (action.type.includes(_taxesPageActions.FEE_TAX_SETUP_KEYWORD)) {
    updatedState = (0, _reducerUtils.reduceAtSubState)(updatedState, action, ['feeTaxSetup'], _feeTaxSetupReducers2.default);
  } else if (action.type.includes(_taxesPageActions.TAX_SETUP_KEYWORD)) {
    updatedState = (0, _reducerUtils.reduceAtSubState)(updatedState, action, ['taxSetup'], _taxSetupReducers2.default);
  }
  return updatedState;
};

exports.default = taxesPage;