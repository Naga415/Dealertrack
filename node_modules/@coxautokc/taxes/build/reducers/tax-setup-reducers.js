'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initialState = undefined;

var _extend2 = require('lodash/extend');

var _extend3 = _interopRequireDefault(_extend2);

var _taxesPageActions = require('../actions/taxes-page-actions');

var _reducerUtils = require('../utils/reducer-utils');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var initialState = exports.initialState = {
  retailFlat: "0",
  retailTradeCredit: null,
  retailTradeCreditAmount: "0",
  retailTaxPercent: "0",
  retailTaxMethod: null,
  retailTaxFees: false,
  retailTaxProducts: false,
  capitalize: false,
  leaseFlat: "0",
  leaseTradeCredit: null,
  leaseTradeCreditAmount: "0",
  leaseTaxPercent: "0",
  leaseTaxMethod: null,
  leaseTaxFees: false,
  leaseTaxProducts: false,
  monthlyUseTaxPercent: "0",
  monthlyTaxMethod: null,
  monthlyTaxFees: false,
  monthlyTaxProducts: false,
  capReductionTaxPercent: "0",
  capReductionTaxMethod: null,
  capTaxFees: false,
  capTaxProducts: false
};

var taxSetup = function taxSetup() {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case _taxesPageActions.FETCH_TAX_SETUP_DATA_SUCCESS:
      {
        var retailTaxFields = action.payload.data.find(function (e) {
          return e.tax_type_name === 'retail';
        });
        var monthlyUseTaxFields = action.payload.data.find(function (e) {
          return e.tax_type_name === 'mut';
        });
        var capReductionTaxFields = action.payload.data.find(function (e) {
          return e.tax_type_name === 'crt';
        });
        var leaseTaxFields = action.payload.data.find(function (e) {
          return e.tax_type_name === 'lease';
        });

        retailTaxFields = (0, _reducerUtils.convertNullOrUndefinedToEmptyStrings)(retailTaxFields, ['flat_amt', 'tax_rate', 'trade_credit_amount']);

        leaseTaxFields = (0, _reducerUtils.convertNullOrUndefinedToEmptyStrings)(leaseTaxFields, ['flat_amt', 'tax_rate', 'trade_credit_amount']);

        monthlyUseTaxFields = (0, _reducerUtils.convertNullOrUndefinedToEmptyStrings)(monthlyUseTaxFields, ['tax_rate']);

        capReductionTaxFields = (0, _reducerUtils.convertNullOrUndefinedToEmptyStrings)(capReductionTaxFields, ['tax_rate']);

        return (0, _extend3.default)({}, state, {
          retailFlat: retailTaxFields['flat_amt'],
          retailTradeCredit: retailTaxFields['trade_credit_id'] && { value: retailTaxFields['trade_credit_id'], label: retailTaxFields['trade_credit_name'] },
          retailTradeCreditAmount: retailTaxFields['trade_credit_amount'],
          retailTaxPercent: retailTaxFields['tax_rate'],
          retailTaxMethod: retailTaxFields['method_id'] && { value: retailTaxFields['method_id'], label: retailTaxFields['method_name'] },
          retailTaxFees: retailTaxFields['is_fee'] === 'Y',
          retailTaxProducts: retailTaxFields['is_product'] === 'Y',
          leaseFlat: leaseTaxFields['flat_amt'],
          leaseTradeCredit: leaseTaxFields['trade_credit_id'] && { value: leaseTaxFields['trade_credit_id'], label: leaseTaxFields['trade_credit_name'] },
          leaseTradeCreditAmount: leaseTaxFields['trade_credit_amount'],
          leaseTaxPercent: leaseTaxFields['tax_rate'],
          leaseTaxMethod: leaseTaxFields['method_id'] && { value: leaseTaxFields['method_id'], label: leaseTaxFields['method_name'] },
          leaseTaxFees: leaseTaxFields['is_fee'] === 'Y',
          leaseTaxProducts: leaseTaxFields['is_product'] === 'Y',
          monthlyUseTaxPercent: monthlyUseTaxFields['tax_rate'],
          monthlyTaxMethod: monthlyUseTaxFields['method_id'] && { value: monthlyUseTaxFields['method_id'], label: monthlyUseTaxFields['method_name'] },
          monthlyTaxFees: monthlyUseTaxFields['is_fee'] === 'Y',
          monthlyTaxProducts: monthlyUseTaxFields['is_product'] === 'Y',
          capReductionTaxPercent: capReductionTaxFields['tax_rate'],
          capReductionTaxMethod: capReductionTaxFields['method_id'] && { value: capReductionTaxFields['method_id'], label: capReductionTaxFields['method_name'] },
          capTaxFees: capReductionTaxFields['is_fee'] === 'Y',
          capTaxProducts: capReductionTaxFields['is_product'] === 'Y'
        });
      }
    case _taxesPageActions.UPDATE_TAX_SETUP_INPUT:
      {
        return (0, _extend3.default)({}, state, _defineProperty({}, action.payload.field, action.payload.value));
      }
    default:
      {
        return state;
      }
  }
};

exports.default = taxSetup;