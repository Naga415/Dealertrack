"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = FeesFormElements;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _TextInput = require("@coxautokc/fusion-ui-components/lib/TextInput");

var _TextInput2 = _interopRequireDefault(_TextInput);

var _Checkbox = require("react-bootstrap/lib/Checkbox");

var _Checkbox2 = _interopRequireDefault(_Checkbox);

var _SelectInput = require("@coxautokc/fusion-ui-components/lib/SelectInput");

var _SelectInput2 = _interopRequireDefault(_SelectInput);

var _SelectWithGroup = require("../customizedUIComponents/SelectWithGroup");

var _SelectWithGroup2 = _interopRequireDefault(_SelectWithGroup);

var _Input = require("../customizedUIComponents/Input/Input");

var _Input2 = _interopRequireDefault(_Input);

var _IconAdd = require("@coxautokc/fusion-ui-components/lib/Icons/IconAdd");

var _IconAdd2 = _interopRequireDefault(_IconAdd);

var _IconDelete = require("@coxautokc/fusion-ui-components/lib/Icons/IconDelete");

var _IconDelete2 = _interopRequireDefault(_IconDelete);

var _Row = require("@coxautokc/fusion-ui-components/lib/Row");

var _Row2 = _interopRequireDefault(_Row);

var _Col = require("@coxautokc/fusion-ui-components/lib/Col");

var _Col2 = _interopRequireDefault(_Col);

require("./FeesFormElements.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function FeesFormElements(props) {
  var paidTo = [{
    label: null,
    value: null
  }, {
    label: "Dealer",
    value: "Dealer"
  }, {
    label: "State",
    value: "State"
  }, {
    label: "Others",
    value: "Others"
  }];

  var grouppedFees = props.grouppedFees,
      handleChangeFromForm = props.handleChangeFromForm,
      handleChangeFromInput = props.handleChangeFromInput,
      handleBlurFromInput = props.handleBlurFromInput,
      appendFee = props.appendFee,
      deleteFee = props.deleteFee,
      quoteFees = props.quoteFees;


  return _react2.default.createElement(
    "div",
    { id: "FeesFormElements" },
    quoteFees.map(function (qf, index) {
      return _react2.default.createElement(
        _Row2.default,
        { key: "row-" + index },
        _react2.default.createElement(
          _Col2.default,
          { md: 3, sm: 3 },
          _react2.default.createElement(_SelectWithGroup2.default, {
            displayLabel: false,
            htmlId: "feesFeeType-" + index,
            name: "feesFeeType-" + index,
            label: "Fees",
            placeholder: " ",
            options: grouppedFees,
            displayPlaceholder: true
            // eslint-disable-next-line
            , onChange: function onChange(e) {
              return handleChangeFromForm("feeType", e);
            },
            value: qf.feeId.toString() || "0"
          })
        ),
        _react2.default.createElement(
          _Col2.default,
          { md: 3, sm: 3 },
          _react2.default.createElement(_TextInput2.default, {
            displayLabel: false,
            htmlId: "feesFeeName-" + index,
            name: "feesFeeName-" + index,
            label: "Fee Name",
            placeholder: " ",
            maxLength: 50
            // eslint-disable-next-line
            , onChange: function onChange(e) {
              return handleChangeFromForm("feeCustomName", e);
            },
            value: qf.feeCustomName || ""
          })
        ),
        _react2.default.createElement(
          _Col2.default,
          { md: 2, sm: 2 },
          _react2.default.createElement(_Input2.default, {
            displayLabel: false,
            htmlId: "feesAmount-" + index,
            addOnClassName: "fa fa-usd",
            name: "feesAmount-" + index,
            label: "Amount",
            disabled: false,
            value: qf.feeAmount
            //eslint-disable-next-line
            , onChange: handleChangeFromInput,
            onBlur: handleBlurFromInput
          })
        ),
        _react2.default.createElement(
          _Col2.default,
          { md: 1, sm: 1 },
          _react2.default.createElement(_Checkbox2.default, {
            id: "feesCap-" + index,
            name: "feesCap-" + index,
            label: "Cap"
            //eslint-disable-next-line
            , onChange: function onChange(e) {
              return handleChangeFromForm("capitalizedIndicator", e);
            },
            checked: qf.capitalizedIndicator
          })
        ),
        _react2.default.createElement(
          _Col2.default,
          { md: 2, sm: 2 },
          _react2.default.createElement(_SelectInput2.default, {
            htmlId: "feesPaidTo-" + index,
            name: "feesPaidTo-" + index,
            label: "PaidTo"
            //eslint-disable-next-line
            , onChange: function onChange(e) {
              return handleChangeFromForm("paidTo", e);
            },
            options: paidTo,
            displayLabel: false,
            displayPlaceholder: false,
            value: qf.paidTo
          })
        ),
        _react2.default.createElement(
          _Col2.default,
          { md: 1, sm: 1, id: "feesInteraction-" + index },
          quoteFees.length !== index + 1 ? _react2.default.createElement(_IconAdd2.default, { className: "deactive-add-btn" }) : _react2.default.createElement(_IconAdd2.default, { className: "active-add-btn", onClick: appendFee }),
          quoteFees.length > 1 && _react2.default.createElement(_IconDelete2.default, {
            className: "active-delete-btn"
            // eslint-disable-next-line
            , onClick: function onClick() {
              return deleteFee(index);
            }
          })
        )
      );
    })
  );
}

FeesFormElements.propTypes = {
  deleteFee: _propTypes2.default.func.isRequired,
  quoteFees: _propTypes2.default.array.isRequired,
  handleChangeFromForm: _propTypes2.default.func.isRequired,
  handleBlurFromInput: _propTypes2.default.func.isRequired,
  handleChangeFromInput: _propTypes2.default.func.isRequired,
  appendFee: _propTypes2.default.func.isRequired,
  grouppedFees: _propTypes2.default.object.isRequired
};