"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HomePage = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require("react-redux");

var _redux = require("redux");

var _FeesActions = require("../actions/FeesActions");

var FeesActions = _interopRequireWildcard(_FeesActions);

var _FullPageModal = require("@coxautokc/fusion-ui-components/lib/FullPageModal");

var _FullPageModal2 = _interopRequireDefault(_FullPageModal);

var _ModalFooter = require("./ModalFooter/ModalFooter");

var _ModalFooter2 = _interopRequireDefault(_ModalFooter);

var _FeesFormHeader = require("./FeesFormHeader/FeesFormHeader");

var _FeesFormHeader2 = _interopRequireDefault(_FeesFormHeader);

var _FeesFormElements = require("./FeesFormElements/FeesFormElements");

var _FeesFormElements2 = _interopRequireDefault(_FeesFormElements);

require("./HomePage.scss");

require("font-awesome/css/font-awesome.css");

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HomePage = exports.HomePage = function (_Component) {
  _inherits(HomePage, _Component);

  function HomePage() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, HomePage);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = HomePage.__proto__ || Object.getPrototypeOf(HomePage)).call.apply(_ref, [this].concat(args))), _this), _this.cancel = function () {
      _this.props.closeDialog();
      _this.props.cancelEditing();
    }, _this.save = function () {
      var dataToSend = _this.filterQuoteFees(_this.props.quoteFees);
      var actionObject = _this.props.validateQuoteFees(dataToSend);

      if (!actionObject.payload.formHasError) {
        var totalFees = dataToSend.reduce(function (accu, data) {
          return accu + data["feeAmount"];
        }, 0);
        _this.props.saveQuoteFees();
        _this.props.pushFeeQuoteFee(dataToSend);
        _this.props.populateValue(_this.props.name, totalFees.toString());
        _this.props.closeDialog();
      }
    }, _this.filterQuoteFees = function (quoteFees) {
      var dataToSend = quoteFees.filter(function (quoteFee) {
        return quoteFee.feeType.length || quoteFee.feeCustomName.length || quoteFee.feeAmount.length || quoteFee.paidTo.length;
      }).map(function (quoteFee) {
        // remove coma from numbers
        return Object.assign({}, quoteFee, {
          feeAmount: Number(quoteFee["feeAmount"].replace(/,/g, "")),
          zipCode: quoteFee["zipCode"] || _this.props.zipCode
        });
      });

      return dataToSend;
    }, _this.showError = function () {
      var errorToShow = Object.keys(_this.props.error).filter(function (key) {
        return _this.props.error[key];
      });

      return "Please Select Fields: " + errorToShow.join(", ") + ".";
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(HomePage, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.props.fetchExistingFeeQuoteFee(this.props.dealId, this.props.scenarioId);
    }
  }, {
    key: "render",
    value: function render() {
      var _props = this.props,
          closeDialog = _props.closeDialog,
          dialogStatus = _props.dialogStatus;

      return _react2.default.createElement(
        _FullPageModal2.default,
        {
          htmlId: "Fees-Modal",
          className: "sample-fullpage-modal",
          show: dialogStatus,
          header: _react2.default.createElement(
            _FullPageModal2.default.Title,
            null,
            "EDIT FEES"
          ),
          onHide: closeDialog,
          footer: _react2.default.createElement(_ModalFooter2.default, {
            displayResetBtn: true,
            modalName: "fees",
            save: this.save,
            cancel: this.cancel,
            resetData: this.props.refreshForm
          })
        },
        _react2.default.createElement(
          "div",
          null,
          this.props.formHasError && _react2.default.createElement(
            "div",
            { className: "alert alert-danger" },
            this.showError()
          ),
          _react2.default.createElement(_FeesFormHeader2.default, null),
          _react2.default.createElement(_FeesFormElements2.default, {
            grouppedFees: this.props.grouppedFees,
            handleChangeFromForm: this.props.handleChangeFromForm,
            handleChangeFromInput: this.props.handleChangeFromInput,
            handleBlurFromInput: this.props.handleBlurFromInput,
            appendFee: this.props.appendFee,
            deleteFee: this.props.deleteFee,
            quoteFees: this.props.quoteFees
          }),
          _react2.default.createElement(
            "p",
            null,
            _react2.default.createElement(
              "b",
              null,
              "*Lender Fees"
            ),
            " - The fee amount from lender programs will be used"
          )
        )
      );
    }
  }]);

  return HomePage;
}(_react.Component);

HomePage.propTypes = _defineProperty({
  closeDialog: _propTypes2.default.func.isRequired,
  dialogStatus: _propTypes2.default.bool.isRequired,
  name: _propTypes2.default.string.isRequired,
  populateValue: _propTypes2.default.func.isRequired,
  fetchExistingFeeQuoteFee: _propTypes2.default.func,
  dealId: _propTypes2.default.number.isRequired,
  scenarioId: _propTypes2.default.number.isRequired,
  cancelEditing: _propTypes2.default.func,
  quoteFees: _propTypes2.default.func,
  validateQuoteFees: _propTypes2.default.func,
  saveQuoteFees: _propTypes2.default.func,
  pushFeeQuoteFee: _propTypes2.default.func,
  zipCode: _propTypes2.default.number.isRequired,
  error: _propTypes2.default.object,
  refreshForm: _propTypes2.default.func,
  formHasError: _propTypes2.default.bool,
  grouppedFees: _propTypes2.default.object,
  handleChangeFromForm: _propTypes2.default.func,
  handleChangeFromInput: _propTypes2.default.func,
  handleBlurFromInput: _propTypes2.default.func,
  appendFee: _propTypes2.default.func,
  deleteFee: _propTypes2.default.func
}, "quoteFees", _propTypes2.default.array);

function mapStateToProps(state) {
  return {
    formHasError: state.feesReducers.formHasError,
    error: state.feesReducers.error,
    fees: state.feesReducers.fees,
    grouppedFees: state.feesReducers.grouppedFees,
    quoteFees: state.feesReducers.quoteFees,
    savedQuoteFees: state.feesReducers.savedQuoteFees
  };
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(FeesActions, dispatch);
}

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(HomePage);