"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Input;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

require("./Input.scss");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function Input(_ref) {
  var label = _ref.label,
      displayLabel = _ref.displayLabel,
      htmlId = _ref.htmlId,
      addOnClassName = _ref.addOnClassName,
      props = _objectWithoutProperties(_ref, ["label", "displayLabel", "htmlId", "addOnClassName"]);

  return _react2.default.createElement(
    "div",
    { className: "form-group" },
    displayLabel && _react2.default.createElement(
      "label",
      { htmlFor: name },
      label
    ),
    _react2.default.createElement(
      "div",
      { className: "input-group" },
      !!addOnClassName && _react2.default.createElement(
        "span",
        { className: "input-group-addon" },
        _react2.default.createElement("i", { className: addOnClassName })
      ),
      _react2.default.createElement("input", Object.assign({ id: htmlId, type: "text", className: "form-control" }, props))
    )
  );
}

Input.propTypes = {
  addOnClassName: _propTypes2.default.string,
  disabled: _propTypes2.default.bool,
  displayLabel: _propTypes2.default.bool,
  htmlId: _propTypes2.default.string,
  label: _propTypes2.default.string.isRequired,
  name: _propTypes2.default.string.isRequired,
  onBlur: _propTypes2.default.func.isRequired,
  onChange: _propTypes2.default.func.isRequired,
  placeholder: _propTypes2.default.string,
  value: _propTypes2.default.string.isRequired
};

Input.default = {
  displayLabel: false
};