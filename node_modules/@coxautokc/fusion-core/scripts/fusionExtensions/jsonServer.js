var jsonServer = require('json-server');
var spawn = require('cross-spawn');
var paths = require('../../config/paths');
var path = require('path');
var chalk = require('chalk');
var fs = require('fs');

function start() {
  // The command below would normally be run in an npm script,
  // but since we want to hide all of Fusion behind an npm package, we'll run it here.
  // http://stackoverflow.com/questions/20643470/execute-a-command-line-binary-with-node-js
  var exec = require('child_process').exec;
  const path = getJsonServerPath();
  // adding --static to pull the localhost:3002 index page from json-server instead of the local public directory.
  var cmd = path + ' --watch src/api/db.json --port 3002 --static ' + 'node_modules/json-server/lib/server/public';

  var mockApi = exec(cmd, function(error, stdout, stderr) {
    if (error) {
      console.log(chalk.red(error));
      process.exit(1);
    }

    if (stderr) {
      console.log(chalk.red(stderr));
      process.exit(1);
    }

    console.log(chalk.green('JSON Server is running'));
  });

  process.on('exit', function() {
    mockApi.kill();
  });
}

function getJsonServerPath() {
  // File path differs depending on whether npm install vs yarn was used.
  const npmPath = path.join(paths.appNodeModules, '.bin', 'json-server');
  const yarnPath = path.join(paths.appNodeModules, 'json-server', 'bin', 'index.js');
  return fs.existsSync(npmPath) ? npmPath : yarnPath;
}

module.exports = {
  start: start
};
